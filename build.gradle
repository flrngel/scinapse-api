buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE")
    }
}

group = 'plutonet'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

jar {
    baseName = 'absolute'
    version = '0.0.1'
}

springBoot {
    executable = true
}

dependencyManagement {
    imports {
        mavenBom('com.amazonaws:aws-java-sdk-bom:1.11.220')
        mavenBom('com.amazonaws:aws-xray-recorder-sdk-bom:1.3.1')
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile project(':bibliotheca')

    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')

    runtime('org.postgresql:postgresql')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

    compile('org.springframework.boot:spring-boot-starter-security')
    compile('io.jsonwebtoken:jjwt:0.7.0')

    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('com.github.ben-manes.caffeine:caffeine')

    compile('org.elasticsearch:elasticsearch:6.2.4')
    compile('org.elasticsearch.client:elasticsearch-rest-high-level-client:6.2.4')

    compile('com.amazonaws:aws-java-sdk-ses')
    compile('io.sentry:sentry-spring:1.6.4')

    compile("com.amazonaws:aws-xray-recorder-sdk-core")
    compile("com.amazonaws:aws-xray-recorder-sdk-aws-sdk")
    compile("com.amazonaws:aws-xray-recorder-sdk-spring")

    compile('io.springfox:springfox-swagger2:2.7.0')
    compile('io.springfox:springfox-swagger-ui:2.7.0')

    runtime('org.springframework.boot:spring-boot-devtools')
    compileOnly('org.projectlombok:lombok')

    testCompile('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
}
